html {
  box-sizing: border-box;
  font-family: sans-serif;
  font-size: 16px;
  overflow-x: hidden;
}

*,
*::after,
*::before {
  box-sizing: inherit;
}

.box {
  border: thick solid #000;
  margin-left: auto;
  margin-right: auto;
  width: 200px;
  height: 200px;
  margin-bottom: 5rem;
}

.card {
  border: thick solid #000;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 5rem;
  width: 600px;
  height: 400px;
  margin-bottom: 3rem;
}

.card img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: 0 50%;
}

/************************ Transiciones *************************/
/*
    Transiciones
        transition-property => ¿Que propiedad quiero modificar?.
        transition-duration => ¿Cuanto tiempo quiero que dure?
        transition-timing-function: none linear ease ease-in ease-out ease-in-out steps => aceleracion
        transition-delay => que espere cierto tiempo y despues que empieze con la animacion.    
        transition: property duration timing-function delay

    Propiedades CSS animables
    link => https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_animated_properties
*/
.transitions .box {
  background-color: magenta;
  transition-property: background-color;
  transition-duration: 1.5s;
  transition-timing-function: ease;
  transition-delay: 0.5s;
  transition: border-color 3s linear 0.5s;
  transition: all 2s ease-in-out 900ms;
  transition: background-color 2s ease-in-out 250ms,
    border-color 2s ease-in-out 250ms, border-radius 2s ease-in-out 250ms;
}

.transitions .box:hover {
  background-color: cyan;
  border-color: red;
  border-radius: 2rem;
  /* border-style: dashed; */
}

/**** Transiciones Multiple ****/
.transitions .card {
  transition: opacity 1s ease-out, border-color 3s steps(3),
    filter 2s ease-in 1s, box-shadow 1.5s linear 2s;
}

.transitions .card:hover {
  opacity: 0.75;
  border-color: orchid;
  filter: blur(0.15rem);
  box-shadow: 1rem 1rem 2rem 0.5rem;
}

.transitions .card img {
  transition: object-position 2s ease-in-out 3s;
}

.transitions .card img:hover {
  object-position: 100% 50%;
}

/************************ Transformaciones *************************/
/***** Transformaciones 2D *******/
.transform-2d img {
  transition: transform 2s ease-in-out;
}

.transform-2d img:hover {
  transform: none;
  transform: translateX(4rem);
  transform: translateY(4rem);
  transform: translateY(-4rem);
  transform: translateZ(4rem);
  transform: translate(-4rem, 4rem); /*(x, y)*/
  transform: translate(50%, 50%);
  transform: scaleX(2); /*va a aumentar el 200% de su tamaño*/
  transform: scaleY(0.5); /*va a disminuir al 50% de su tamaño*/
  transform: scaleZ(1.5); /*va a aumentar al 150% de su tamaño*/
  transform: scale(1.5, 1.5); /* (x, y) */
  transform: scale(-1, -1);
  transform: scale(-0.5, -0.5);
  transform: rotateX(60deg);
  transform: rotateX(90deg);
  transform: rotateY(60deg);
  transform: rotateY(90deg);
  transform: rotateZ(60deg);
  transform: rotateZ(360deg);
  transform: rotate(-360deg); /*rotateZ es igual a rotate*/
  transform: skewX(20deg);
  transform: skewX(-20deg);
  transform: skewY(20deg);
  transform: skewY(-20deg);
  transform: skew(20deg, 20deg);
  /*
  matrix( scaleX(), skewY(), skewX(), scaleY(), translateX(), translateY() )
  */
  transform: matrix(1, 2, 2, 1, 20, 10);
  transform: translate(25%, -50%) rotate(360deg) skew(10deg, 20deg)
    scale(-0.5, -0.5);
}
/*
matrix => https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/matrix()
*/

/***** Transformaciones 3D *******/
.transform-3d img {
  transition: transform 2s ease-in-out;
}

.transform-3d img:hover {
  transform: translateZ(4rem);
  transform: perspective(1000px) translateZ(4rem);
  transform: perspective(10px) translateZ(4rem);
  transform: perspective(10rem) translateZ(4rem);
  transform: perspective(10rem) translateZ(-4rem);
}

/** Otra forma de activar la perspective **/
.transform-3d {
  perspective: 10rem;
}

.transform-3d img {
  transition: transform 2s ease-in-out;
}

.transform-3d img:hover {
  transform: translateZ(-4rem);
  transform: translate3d(2rem, 50%, -3rem);
  transform: scaleZ(1.5);
  transform: scale3d(2, 0.5, 3);
  transform: rotateX(60deg);
  transform: rotateY(60deg);
  transform: rotate3d(1, 1, 1, 45deg);
  transform: rotate3d(1, 0.5, 0, -45deg); /*(x, y, z, angulo de inclinacion)*/
  transform: matrix3d(1, 0, 0, 0, 0, 1, 6, 0, 0, 0, 1, 0, 50, 100, 0, 1.1);
  transform: rotate3d(-1, 2.5, -2, 60deg) translate3d(2rem, 50%, -3rem)
    scale3d(2, -0.5, 3);
}

/*
translate3d() => https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/translate3d()
scale3d() => https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/scale3d()
rotate3d() => https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/rotate3d()
matrix3d() => https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/matrix3d()
*/

/***** Origen de la Transformación*******/
.transform-origin img {
  transition: transform 2s ease-in-out;
  /* transform-origin: x y z*/
  transform-origin: 50% 50% 0;
  transform-origin: 0 0;
  transform-origin: 0;
  transform-origin: top left;
  transform-origin: top center;
}

.transform-origin img:hover {
  transform: rotate(360deg);
}

/***** Flip Cards *******/
.flip-card-1,
.flip-card-2 {
  border: thick solid #000;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 5rem;
  width: 600px;
  height: 400px;
  margin-bottom: 3rem;

  position: relative;
  cursor: pointer;
  transition: transform 1s ease-in-out;
  perspective: 10rem;
  transform-style: flat;
  transform-style: preserve-3d;
}

.flip-card-2 {
  transform-origin: center right;
}

.flip-card-1:hover {
  transform: rotateY(180deg);
}

.flip-card-2:hover {
  transform: translateX(-100%) rotateY(-180deg);
}

.flip-card-1 img,
.flip-card-2 img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: 0 50%;
}

.flip-face {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: visible; /* por defecto*/
  backface-visibility: hidden;
}

.flip-front {
  transform: rotateY(0deg);
}

.flip-back {
  transform: rotateY(180deg);
}

/************************ Animaciones *************************/
/*
animation: name duration timing-function delay iteration-count direction fill-mode play-state;
el name y la duration son obligatorias

cubic-bezier => https://cubic-bezier.com/#.17,.67,.83,.67
*/
.my-animation {
  animation-name: myAwesomeAnimation;
  animation-duration: 3s;
  animation-timing-function: cubic-bezier(1, 0, 0, 1);
  animation-timing-function: cubic-bezier(0.33, 0.92, 0.92, 0.36);
  animation-timing-function: ease-in-out;
  animation-delay: 1500ms;
  animation-delay: 0;
  animation-iteration-count: 2;
  animation-iteration-count: 1;
  animation-direction: reverse;
  animation-direction: alternate;
  animation-direction: alternate-reverse;
  animation-direction: normal;
  animation-fill-mode: none;
  /*Al final de la animacion se queda con los estilos finales de la animacion*/
  animation-fill-mode: forwards;
  /*Al inicio de la animacion se queda con los estilos iniciales de la animacion*/
  animation-fill-mode: backwards;
  /*both aplica al mismo tiempo forwards y backwards*/
  animation-fill-mode: both;
  animation-play-state: paused;
  animation-play-state: running;
  animation: myAwesomeAnimation 1.5s ease 250ms 1 alternate both running;
}

@keyframes myAwesomeAnimation {
  from {
    opacity: 0;
    transform: translateX(0);
  }

  to {
    opacity: 1;
    transform: translateX(50%);
  }
}

/** Animacion con varios tiempos ***/
.my-animation-2 {
  animation: myAwesomeAnimation2 2s;
  animation: myAwesomeAnimation2 5s;
}

@keyframes myAwesomeAnimation2 {
  0% {
    opacity: 0;
    transform: translateX(0);
  }

  50% {
    opacity: 0.5;
    transform: translateX(-25%);
  }

  75% {
    transform: translateX(-50%);
  }

  100% {
    opacity: 1;
    transform: translateX(50%);
  }
}

/** Animaciones Multiples **/
.animation-multiple {
  animation: multipleAnimation1 5s 3, multipleAnimation2 5s 3 ease-in-out;
}

@keyframes multipleAnimation1 {
  0% {
    opacity: 1;
  }

  50% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

@keyframes multipleAnimation2 {
  0% {
    transform: translateY(0);
  }

  50% {
    transform: translateY(-50%);
  }

  100% {
    transform: translateY(0);
  }
}

/*********************** Ejemplos ***********************************/
.motion-examples {
  text-align: center;
}

/********* ejemplo 1 (FadeIn / FadeOut) ***********/
.fade-in {
  font-size: 5vw;
  animation: fadeIn 2s linear 2s infinite alternate both;
}

@keyframes fadeIn {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

.fade-out {
  font-size: 5vw;
  animation: fadeOut 2s linear 2s infinite alternate both;
}

@keyframes fadeOut {
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
}

/********* ejemplo 2 (shake) ***********/
.shake {
  font-size: 5vw;
  cursor: pointer;
  display: inline-block;
}

.shake:hover {
  animation: shake 1s cubic-bezier(0.36, 0.7, 0.19, 0.97) both;
  transform: translate(0, 0);
}

@keyframes shake {
  10%,
  90% {
    transform: translate(-1px, 0);
  }

  20%,
  80% {
    transform: translate(2px, 0);
  }

  30%,
  50%,
  70% {
    transform: translate(-4px, 0);
  }

  40%,
  60% {
    transform: translate(4px, 0);
  }
}

/********* ejemplo 3 (pulse) ***********/
.pulse {
  font-size: 5vw;
  animation: pulse 1s linear infinite alternate both;
}

@keyframes pulse {
  0% {
    transform: scale(1.1);
  }

  50% {
    transform: scale(0.8);
  }

  100% {
    transform: scale(1);
  }
}

/********* ejemplo 4 (pulse) ***********/
.heart {
  position: relative;
  margin-left: auto;
  margin-right: auto;
  margin-top: 3rem;
  width: 10vw;
  height: 10vw;
  animation: pulse 1s infinite alternate both;
}

.heart::after,
.heart::before {
  position: absolute;
  content: "";
  left: 5vw;
  top: 0;
  width: 5vw;
  height: 8vw;
  background-color: #a00;
  transform: rotate(-45deg);
  transform-origin: 0 100%;
  border-radius: 5vw 5vw 0 0;
  animation: heartColor 1s infinite;
}

.heart::after {
  left: 0;
  transform: rotate(45deg);
  transform-origin: 100% 100%;
}

@keyframes heartColor {
  100% {
    background-color: #d00;
  }
}

/********* ejemplo 5 (Spinner / Loader) ***********/
.spinner {
  width: 5vw;
  height: 5vw;
  margin-left: auto;
  margin-right: auto;
  border-radius: 50%;
  border: 0.5vw solid rgba(0, 0, 0, 0.4);
  border-left-color: #09f;
  animation: spinner 1s ease-in-out infinite;
}

@keyframes spinner {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

/********* ejemplo 6 (Botones Animados) ***********/
.btn {
  position: relative;
  border: none;
  border-radius: 0.25rem;
  padding: 0.2rem;
  width: 15rem;
  height: 2.5rem;
  font-size: 1.25rem;
  font-weight: bold;
  cursor: pointer;
  overflow: hidden;
  box-shadow: 0.25rem 0.25rem 0.5rem 0.25rem rgba(0, 0, 0, 0.15);
}

.anim-bottom::after {
  content: "";
  position: absolute;
  bottom: 0;
  width: 0;
  height: 0.25rem;
  background-color: #d00;
  transition: width 0.5s ease, left 0.5s ease, right 0.5s ease;
}

.anim-bottom:hover::after {
  width: 100%;
}

.to-left::after {
  left: 0;
}

.to-center::after {
  left: 50%;
}

.to-center:hover::after {
  left: 0;
}

.to-right::after {
  right: 0;
}

.anim-bg-gradient {
  background-image: linear-gradient(to right, pink, violet, orange, orangered);
  background-size: 300% 100%;
  transition: background-position 0.5s ease-in-out;
}

.anim-bg-gradient:hover {
  background-position: 100% 0;
}

/********* ejemplo 7 Menú de Pestañas (Tabs) ***********/
.tabs-menu {
  position: relative;
  margin-left: auto;
  margin-right: auto;
  padding: 1rem;
  border-radius: 1rem;
  width: 70%;
  height: 3rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: #ddd;
}

.tabs-menu input[type="radio"] {
  display: none;
}

.tabs-menu label {
  position: relative;
  z-index: 1;
  width: calc(100% / 4 - 0.5rem);
  text-align: center;
  cursor: pointer;
}

.tabs-menu label:hover {
  color: #09f;
}

.tabs-menu input[type="radio"]:checked + label {
  color: #09f;
}

.tab-bg-hover {
  position: absolute;
  width: calc(100% / 4 - 0.5rem);
  height: 2rem;
  border-radius: 0.5rem;
  background-image: linear-gradient(90deg, #a00, #d00);
  transition: transform 300ms ease-in-out;
}

#tab-1:checked ~ .tab-bg-hover {
  transform: translateX(0);
}

#tab-2:checked ~ .tab-bg-hover {
  transform: translateX(100%);
}

#tab-3:checked ~ .tab-bg-hover {
  transform: translateX(200%);
}

#tab-4:checked ~ .tab-bg-hover {
  transform: translateX(300%);
}

/********* ejemplo 8 Menú de Hamburguesa ***********/
.off-canvas-btn {
  position: fixed;
  bottom: 1rem;
  right: 1rem;
  z-index: 999;
  width: 3rem;
  height: 3rem;
  cursor: pointer;
  /* opacity: 0.25; */
  opacity: 0;
}

.off-canvas-burger {
  position: fixed;
  bottom: 1rem;
  right: 1rem;
  z-index: 998;
  width: 3rem;
  height: 0.6rem;
  background-color: #d00;
  border-radius: 0.3rem;
  transform: rotate(0deg) translate(0, -1.2rem);
  transform-origin: top left;
  transition: transform 0.5s ease, background-color 500ms ease;
}

.off-canvas-burger::before,
.off-canvas-burger::after {
  content: "";
  display: block;
  width: 100%;
  height: 0.6rem;
  background-color: #d00;
  border-radius: 0.3rem;
  transition: transform 500ms ease;
}

.off-canvas-burger::before {
  transform: rotate(0deg) translate(0, -0.9rem);
  /* background-color: blue; */
}

.off-canvas-burger::after {
  transform: rotate(0deg) translate(0, 0.3rem);
  /* background-color: green; */
}

.off-canvas-btn:checked + .off-canvas-burger {
  background-color: transparent;
}

.off-canvas-btn:checked + .off-canvas-burger::before {
  transform: rotate(45deg) translate(0, 0);
}

.off-canvas-btn:checked + .off-canvas-burger::after {
  transform: rotate(-45deg) translate(0.4rem, -0.5rem);
}

/* 9:26:12 */
